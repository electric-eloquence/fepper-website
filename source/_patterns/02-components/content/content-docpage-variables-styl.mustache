<h3 id="variablesstyl"><a id="variables.styl"></a>variables.styl</h3><p><code>source/_scripts/src/variables.styl</code> is a file containing variables that can 
be shared across the Stylus CSS preprocessor, browser JavaScripts, and PHP 
backends (and possibly other language backends as well). It ships with these 
values:</p><pre><code>bp_lg_max = -1
bp_md_max = 1024
bp_sm_max = 767
bp_xs_max = 480
bp_xx_max = 320
bp_xx_min = 0
</code></pre><p>It cannot contain comments, semi-colons, curly braces, etc. It is 
straightforward to import and use these variables in Stylus and JavaScript. PHP 
must import them with <code>parse_ini_file()</code>. Fepper tries to be agnostic about CSS 
processors and tries to keep the amount of npms to download to a minimum. 
However, since Stylus allows for this easy sharing of variables, most Fepper 
distros ship with the 
<a href="https://www.npmjs.com/package/fp-stylus" target="_blank">fp-stylus</a> 
extension and a fully-populated <code>source/_styles/src/stylus</code> directory. The 
Stylus files are written in the terse, YAML-like, indentation-based syntax. 
However, the more verbose, CSS-like syntax (with curly braces and semi-colons) 
is perfectly valid as well.</p><p>The UI&#39;s viewport resizer buttons are dependent on the values in 
<code>variables.styl</code>. The default values will configure the XX, XS, SM, and MD 
buttons to resize the viewport to each breakpoint&#39;s assigned maximum width. The 
LG button will resize the viewport to a width that is greater than <code>bp_md_max</code> 
by the distance between <code>bp_sm_max</code> and <code>bp_md_max</code>.</p><p>Users have the ability to add, modify, or delete values in <code>variables.styl</code>. The 
UI will respect these changes; but keep in mind that additions must be prefixed 
by <code>bp_</code> and suffixed by <code>_max</code> in order for them to appear as viewport resizer 
buttons. A <code>-1</code> value translates to <code>Number.MAX_SAFE_INTEGER</code>, and effectively 
means infinity.</p>